import{t as k}from"./index-c34e7bd4.js";const I=1,T=2,z=3,C=9,E=10,L=11,M=48,N=4,v=0,H=1,O=2,j=3;function U(a){let i=0;return{id_length:a[i++],colormap_type:a[i++],image_type:a[i++],colormap_index:a[i++]|a[i++]<<8,colormap_length:a[i++]|a[i++]<<8,colormap_size:a[i++],origin:[a[i++]|a[i++]<<8,a[i++]|a[i++]<<8],width:a[i++]|a[i++]<<8,height:a[i++]|a[i++]<<8,pixel_size:a[i++],flags:a[i++]}}function x(a,i){if(i.length<19){k.Error("Unable to load TGA file - Not enough data to contain header");return}let o=18;const s=U(i);if(s.id_length+o>i.length){k.Error("Unable to load TGA file - Not enough data");return}o+=s.id_length;let f=!1,d=!1,_=!1;switch(s.image_type){case C:f=!0;case I:d=!0;break;case E:f=!0;case T:break;case L:f=!0;case z:_=!0;break}let w;const u=s.pixel_size>>3,c=s.width*s.height*u;let n;if(d&&(n=i.subarray(o,o+=s.colormap_length*(s.colormap_size>>3))),f){w=new Uint8Array(c);let m,y,b,A=0;const G=new Uint8Array(u);for(;o<c&&A<c;)if(m=i[o++],y=(m&127)+1,m&128){for(b=0;b<u;++b)G[b]=i[o++];for(b=0;b<y;++b)w.set(G,A+b*u);A+=u*y}else{for(y*=u,b=0;b<y;++b)w[A+b]=i[o++];A+=y}}else w=i.subarray(o,o+=d?s.width*s.height:c);let l,h,r,t,e,g;switch((s.flags&M)>>N){default:case O:l=0,r=1,g=s.width,h=0,t=1,e=s.height;break;case v:l=0,r=1,g=s.width,h=s.height-1,t=-1,e=-1;break;case j:l=s.width-1,r=-1,g=-1,h=0,t=1,e=s.height;break;case H:l=s.width-1,r=-1,g=-1,h=s.height-1,t=-1,e=-1;break}const p="_getImageData"+(_?"Grey":"")+s.pixel_size+"bits",D=S[p](s,n,w,h,t,e,l,r,g);a.getEngine()._uploadDataToTextureDirectly(a,D)}function B(a,i,o,s,f,d,_,w,u){const c=o,n=i,l=a.width,h=a.height;let r,t=0,e,g;const p=new Uint8Array(l*h*4);for(g=s;g!==d;g+=f)for(e=_;e!==u;e+=w,t++)r=c[t],p[(e+l*g)*4+3]=255,p[(e+l*g)*4+2]=n[r*3+0],p[(e+l*g)*4+1]=n[r*3+1],p[(e+l*g)*4+0]=n[r*3+2];return p}function F(a,i,o,s,f,d,_,w,u){const c=o,n=a.width,l=a.height;let h,r=0,t,e;const g=new Uint8Array(n*l*4);for(e=s;e!==d;e+=f)for(t=_;t!==u;t+=w,r+=2){h=c[r+0]+(c[r+1]<<8);const p=((h&31744)>>10)*255/31|0,D=((h&992)>>5)*255/31|0,m=(h&31)*255/31|0;g[(t+n*e)*4+0]=p,g[(t+n*e)*4+1]=D,g[(t+n*e)*4+2]=m,g[(t+n*e)*4+3]=h&32768?0:255}return g}function J(a,i,o,s,f,d,_,w,u){const c=o,n=a.width,l=a.height;let h=0,r,t;const e=new Uint8Array(n*l*4);for(t=s;t!==d;t+=f)for(r=_;r!==u;r+=w,h+=3)e[(r+n*t)*4+3]=255,e[(r+n*t)*4+2]=c[h+0],e[(r+n*t)*4+1]=c[h+1],e[(r+n*t)*4+0]=c[h+2];return e}function K(a,i,o,s,f,d,_,w,u){const c=o,n=a.width,l=a.height;let h=0,r,t;const e=new Uint8Array(n*l*4);for(t=s;t!==d;t+=f)for(r=_;r!==u;r+=w,h+=4)e[(r+n*t)*4+2]=c[h+0],e[(r+n*t)*4+1]=c[h+1],e[(r+n*t)*4+0]=c[h+2],e[(r+n*t)*4+3]=c[h+3];return e}function P(a,i,o,s,f,d,_,w,u){const c=o,n=a.width,l=a.height;let h,r=0,t,e;const g=new Uint8Array(n*l*4);for(e=s;e!==d;e+=f)for(t=_;t!==u;t+=w,r++)h=c[r],g[(t+n*e)*4+0]=h,g[(t+n*e)*4+1]=h,g[(t+n*e)*4+2]=h,g[(t+n*e)*4+3]=255;return g}function R(a,i,o,s,f,d,_,w,u){const c=o,n=a.width,l=a.height;let h=0,r,t;const e=new Uint8Array(n*l*4);for(t=s;t!==d;t+=f)for(r=_;r!==u;r+=w,h+=2)e[(r+n*t)*4+0]=c[h+0],e[(r+n*t)*4+1]=c[h+0],e[(r+n*t)*4+2]=c[h+0],e[(r+n*t)*4+3]=c[h+1];return e}const S={GetTGAHeader:U,UploadContent:x,_getImageData8bits:B,_getImageData16bits:F,_getImageData24bits:J,_getImageData32bits:K,_getImageDataGrey8bits:P,_getImageDataGrey16bits:R};class Y{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(i,o,s){const f=new Uint8Array(i.buffer,i.byteOffset,i.byteLength),d=U(f);s(d.width,d.height,o.generateMipMaps,!1,()=>{x(o,f)})}}export{Y as _TGATextureLoader};
