import{u as i,P as p,t as u}from"./index-c34e7bd4.js";function d(l){switch(l){case 35916:return 33776;case 35918:return 33778;case 35919:return 33779;case 37493:return 37492;case 37497:return 37496;case 37495:return 37494;case 37840:return 37808;case 36493:return 36492}return null}class c{constructor(){this.supportCascades=!1}loadCubeData(t,e,s,n){if(Array.isArray(t))return;e._invertVScale=!e.invertY;const a=e.getEngine(),r=new i(t,6),o=r.numberOfMipmapLevels>1&&e.generateMipMaps;a._unpackFlipY(!0),r.uploadLevels(e,e.generateMipMaps),e.width=r.pixelWidth,e.height=r.pixelHeight,a._setCubeMapTextureParams(e,o,r.numberOfMipmapLevels-1),e.isReady=!0,e.onLoadedObservable.notifyObservers(e),e.onLoadedObservable.clear(),n&&n()}loadData(t,e,s,n){if(i.IsValid(t)){e._invertVScale=!e.invertY;const a=new i(t,1),r=d(a.glInternalFormat);r?(e.format=r,e._useSRGBBuffer=e.getEngine()._getUseSRGBBuffer(!0,e.generateMipMaps),e._gammaSpace=!0):e.format=a.glInternalFormat,s(a.pixelWidth,a.pixelHeight,e.generateMipMaps,!0,()=>{a.uploadLevels(e,e.generateMipMaps)},a.isInvalid)}else p.IsValid(t)?new p(e.getEngine())._uploadAsync(t,e,n).then(()=>{s(e.width,e.height,e.generateMipMaps,!0,()=>{},!1)},a=>{u.Warn(`Failed to load KTX2 texture data: ${a.message}`),s(0,0,!1,!1,()=>{},!0)}):(u.Error("texture missing KTX identifier"),s(0,0,!1,!1,()=>{},!0))}}export{c as _KTXTextureLoader};
